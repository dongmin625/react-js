//함수 목적은 중복을 줄이기 위함
function sayHello(name){//매개변수 o
  console.log('Hello ${name}');
}

sayHello('Mike'); //함수 호출

function showError(){//매개변수 x
  alert('에러가 발생했습니다. 다시 시도해주세요.');
}

showError(); //함수 호출

function sayHello(name){

  let msg ='Hello';
  if(name){
    msg = 'Hello, ${name}';
  }
  console.log(msg);
}

sayHello(); // -> 'Hello'

function sayHello(name){

  let msg ='Hello';//지역변수
  if(name){
    msg +=name;
    msg += `${name}`;//문자열에 변수 넣을때는 꼭 백틱 사용!
  }
  console.log(msg);
}

sayHello(); // -> 'Hello'
sayHello('Mike');


//전역 변수와 지역 변수

let msg = "welcome"; //전역

function sayHello(name){
  let msg = "Hello" //지역변수 함수내부에서 전역변수와 같은 이름으로 선언가능 간섭 받지 않음
  console.log(msg+''+name)
}
sayHello('Mike');

function sayHello(name){
  let newName = name || 'friend';//입력 x or은 마지막 true를 반환 -> friend 를 반환
  let msg = `Hello, ${name}`
  console.log(msg)
}

sayHello();  //"Hellow friend"
sayHello('Jane') //"Hellow, Jane"

function sayHello(name = 'friend'){//default 값 주는 방법 name에 값이 입력되지 않았을때만 friend 가 들어감
  let msg = `Hello, ${name}`
  console.log(msg)
}

sayHello();  //"Hellow friend"
sayHello('Jane') //"Hellow, Jane"

function add(num1,num2){
  return num1 + num2;
}
const result = add(2,3);
console.log(result);

function showError(){
  alert('에러가 발생했습니다.');
  return; // 단순 함수종료 목적
}
const result = showError();
console.log(result); // -> undefined














